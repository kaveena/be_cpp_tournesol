#include "tournesol.hpp"
#include "fonction_tourne.hpp"
#include <sys/time.h>
#include <iostream>
#include "ecran.hpp"
#include <sstream>

using namespace std;


void tri(float val[], int pos[], int N){
  for (int i = 0;i<N;i++){
    if (pos[i]>181){
      pos[i]=0;
      val[i]=-1;
    }
  }
}

int suivre_lum(tournesol & mysunflower){
  float *val;
  int *pos;
  int sortie;
  val = mysunflower.get_val_cap();
  pos = mysunflower.get_pos_cap();
  if (val[0]>val[1]){
    sortie = pos[0]-1;
  }
  else if (val[2]>val[1]){
    sortie = pos[0]+1;
  }
  else {
    sortie = pos[0];
  }
  delete val;
  delete pos;
  if (sortie<0){
    sortie = 0;
  }
  else if (sortie>180 - (2*ANGLE_MIN)){
    sortie = 180 - (2*ANGLE_MIN);
  }
  mysunflower.set_pos_cap(sortie);
  return (sortie+ANGLE_MIN);
}

int main(){
  int ports [3] = {1,2,3};
  tournesol mysunflower(3,5,3,ports);
  int nombre_de_val = ((180/(3*ANGLE_MIN)) + 1)*3;
  float valeurs[nombre_de_val];
  int position_cap[nombre_de_val];
  int le_max;
  bouton_touch myswitch(2);
  bool bouton_avant=false;
  bool bouton=myswitch.get_val();
  potentiometer mypot(0);
  unsigned int mode = 2;
  lcd myscreen;
  int val_pot;
  stringstream ss_val_pot;
  string str_val_pot;
  unsigned int mode_avant=0;
  int val_pot_avant=0;
  int poursuite;
  
  while(1){
    //--------------------------------------------------------------------------
    if ((!bouton_avant)&&(bouton)){
      //On change de mode sur front montant
      //du bouton touch
      if (mode == 0){
	mode = 1;
      }
      else{
	mode = 0;
      }
    }
    //--------------------------------------------------------------------------
    // MODE MANUEL
    if (mode ==2){
      if (mode_avant!=mode){
	myscreen.change_cou(50,100,255);
	myscreen.print_msg("Welcome","Touch to start");
      }
      mode_avant = 2;
    }
    else if (mode ==0){
      //Mode Manuel
      //On commande la tournesol avec le potentiometre
      val_pot=int((mypot.get_val()/1023)*180.0+0.5);
      mysunflower.set_pos_tourne(val_pot);
      ss_val_pot << val_pot;
      str_val_pot = ss_val_pot.str();
      if (mode_avant!=mode){
	myscreen.change_cou(0,0,255);
      }
      if ((mode_avant!=mode)||(val_pot_avant!=val_pot)){
	str_val_pot = "Angle :" + str_val_pot;
	myscreen.print_msg("mode : manual",str_val_pot);
      }
      
      val_pot_avant = val_pot;
      mode_avant=0;
      ss_val_pot.str("");
      ss_val_pot.clear();
    }
    // MODE AUTOMATIQUE
    else{
      if (mode_avant!=mode){
	myscreen.print_msg("mode :","auto");
	myscreen.change_cou(255,255,0);
	update_photodiode(valeurs,position_cap,mysunflower);
	tri(valeurs,position_cap,nombre_de_val);
	le_max = find_max(valeurs,nombre_de_val);
	mysunflower.set_pos_cap(position_cap[le_max]-ANGLE_MIN);
	mysunflower.set_pos_tourne(160-position_cap[le_max]);
      } 
      mode_avant=1;
      poursuite = suivre_lum(mysunflower);
      mysunflower.set_pos_tourne(160-poursuite);
    }
    bouton_avant = bouton;
    bouton = myswitch.get_val();
    usleep(10000);
  }
  return 0;
}
